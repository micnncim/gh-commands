#!/bin/bash

# gh-pr-status is intended to be used with starship/starship custom commands.
# https://starship.rs/config/#custom-commands

set -eu
set -o pipefail

# Shows the PR number, whether the PR is merged, whether the PR is mergeable,
# what state the latest review has.
#
# The format is: [$number $merged $mergeable $review]
prompt() {
  # shellcheck disable=SC2016
  gh api graphql --cache '10m' -F owner="{owner}" -F name="{repo}" -F headRefName="{branch}" -f query='
  query ($owner: String!, $name: String!, $headRefName: String!) {
    repository(owner: $owner, name: $name) {
      pullRequests(headRefName: $headRefName, states: OPEN, first: 1) {
        nodes {
          number
          merged
          mergeable
          reviews(last: 1) {
            nodes {
              state
            }
          }
        }
      }
    }
  }' --template \
    '
    {{- $nodes := .data.repository.pullRequests.nodes -}}
    {{- if $nodes }}
      {{- $node := (index $nodes 0) -}}
      {{- printf "#%v" $node.number -}}
      {{- if eq $node.merged true -}}{{- " MERGED" -}}{{- end -}}
      {{- printf " %s" $node.mergeable -}}
      {{- if $node.reviews.nodes }}
        {{- printf " %s" (index $node.reviews.nodes 0).state -}}
      {{- end -}}
    {{- end -}}
    '
}

get_default_branch() {
  gh api 'repos/{owner}/{repo}' --cache '24h' --jq '.default_branch'
}

main() {
  if ! git remote -v | grep 'github\.com' >/dev/null; then
    return
  fi

  if [[ "$(git rev-parse --abbrev-ref HEAD)" == "$(get_default_branch)" ]]; then
    return
  fi

  prompt
}

main "$@"
